{"version":3,"sources":["pages/Registeration.module.css","Authentication/auth.js","store/auth-slice.js","pages/Registeration.js","store/dark-slice.js","text.js","store/language-slice.js","components/Switch.js","components/Layout.js","pages/Create.js","components/Note.js","pages/Notes.js","components/RTL.js","App.js","store/index.js","index.js"],"names":["module","exports","signIn","providerName","a","user","error","firebase","length","auth","getAuth","provider","FacebookAuthProvider","GoogleAuthProvider","setCustomParameters","display","signInWithPopup","result","authSlice","createSlice","name","initialState","isLoggedIn","photo","accessToken","refreshToken","reducers","login","state","action","payload","userPhoto","logout","authActions","actions","modalStyle","position","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","Registeration","handleClose","open","dispatch","useDispatch","useSelector","useState","signingError","setSigningError","signInHandler","console","log","photoURL","displayName","signout","signOut","then","catch","err","useEffect","onAuthStateChanged","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Box","sx","className","classes","registerButtons","List","ListItem","icon","variant","style","onClick","button","Button","initialDarkModeState","isDark","localStorage","getItem","darkSlice","switch","setItem","darkModeActions","text","en","submit","createNewNote","categories","details","noteTitle","noteCategory","siteName","myNotes","addNote","lightMode","darkMode","noNotesYet","ar","initialLanguageState","language","textContainer","languageSlice","switchLanguage","languageActions","MaterialUISwitch","styled","Switch","theme","height","padding","margin","color","backgroundImage","encodeURIComponent","opacity","backgroundColor","palette","mode","secondary","main","content","right","backgroundRepeat","backgroundPosition","CustomizedSwitches","label","dark","FormControlLabel","control","checked","dir","drawerWidth","useStyles","makeStyles","root","page","spacing","drawer","drawerPaper","activePage","background","activeTile","title","appBar","toolbar","mixins","date","flexGrow","avatar","cursor","aroundAvatar","avatarIconHover","Layout","props","links","SubjectOutlined","path","AddCircleOutlineOutlined","history","useHistory","location","useLocation","setOpen","Date","AppBar","Toolbar","Typography","value","year","month","day","weekday","Avatar","src","yellow","charAt","Person","Drawer","anchor","paper","map","link","divider","push","pathname","ListItemIcon","ListItemText","primary","children","field","marginTop","marginBottom","Create","setTitle","setDetails","titleError","setTitleError","detailsError","setDetailsError","isLoading","setIsLodaing","category","Container","size","component","id","noValidate","autoComplete","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","TextField","onChange","target","fullWidth","required","helperText","multiline","rows","InputLabelProps","CircularProgress","type","endIcon","marginRight","cardHeader","marginLeft","note","green","pink","blue","Note","deleteNote","Card","elevation","CardHeader","toUpperCase","IconButton","bind","DeleteOutlined","subheader","CardContent","Notes","notes","setNotes","deleteNoteHandler","filter","res","json","data","dummyNotes","fetchedNote","breakpointCols","default","columnClassName","justifyContent","cacheRtl","createCache","key","stylisPlugins","prefixer","rtlPlugin","RTL","App","createMuiTheme","purple","direction","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","locale","messages","ThemeProvider","CssBaseline","exact","store","configureStore","reducer","authSliceReducer","darkSliceReducer","languageSliceReducer","app","firebaseConfig","setPersistence","browserLocalPersistence","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c169055.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerButtons\":\"Registeration_registerButtons__1v74W\",\"button\":\"Registeration_button__blswm\"};","import * as firebase from \"firebase/app\";\r\nimport {\r\n  FacebookAuthProvider,\r\n  GoogleAuthProvider,\r\n  getAuth,\r\n  signInWithPopup,\r\n  signOut,\r\n} from \"firebase/auth\";\r\n\r\nexport const signIn = async (providerName) => {\r\n  let user = null;\r\n  let error = null;\r\n\r\n  let auth;\r\n  if (firebase.getApps().length) {\r\n    auth = getAuth();\r\n  }\r\n\r\n  let provider;\r\n  if (providerName === \"Facebook\") {\r\n    provider = new FacebookAuthProvider();\r\n  } else if (providerName === \"Google\") {\r\n    provider = new GoogleAuthProvider();\r\n  }\r\n\r\n  provider.setCustomParameters({\r\n    display: \"popup\",\r\n  });\r\n\r\n  try {\r\n    const result = await signInWithPopup(auth, provider);\r\n    user = result.user;\r\n  } catch (e) {\r\n    error = e;\r\n  }\r\n  return { user, error };\r\n};\r\n\r\nexport const logout = () => {\r\n  let error;\r\n  const auth = getAuth();\r\n\r\n  signOut(auth)\r\n    .then(() => {})\r\n    .catch((err) => {\r\n      console.log(err);\r\n      error = err;\r\n    });\r\n\r\n  return error;\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialAuthState = {\r\n  isLoggedIn: false,\r\n  photo: null,\r\n  accessToken: null,\r\n  name: null,\r\n  refreshToken: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state, action) {\r\n      state.isLoggedIn = true;\r\n      state.photo = action.payload.userPhoto;\r\n      state.accessToken = action.payload.accessToken;\r\n      state.name = action.payload.name;\r\n      state.refreshToken = action.payload.refreshToken;\r\n    },\r\n    logout(state) {\r\n      state.isLoggedIn = false;\r\n      state.photo = null;\r\n      state.accessToken = null;\r\n      state.name = null;\r\n      state.refreshToken = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n","import { getAuth } from \"@firebase/auth\";\r\nimport {\r\n  Backdrop,\r\n  Box,\r\n  Button,\r\n  Fade,\r\n  List,\r\n  ListItem,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  AppleLoginButton,\r\n  FacebookLoginButton,\r\n  GoogleLoginButton,\r\n} from \"react-social-login-buttons\";\r\nimport { logout, signIn } from \"../Authentication/auth\";\r\nimport { authActions } from \"../store/auth-slice\";\r\nimport classes from \"./Registeration.module.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCoffee } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst modalStyle = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 300,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  borderRadius: 16,\r\n};\r\n\r\nconst Registeration = ({ handleClose, open }) => {\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n  const [signingError, setSigningError] = useState(null);\r\n\r\n  const signInHandler = async (provider) => {\r\n    const { user, error } = await signIn(provider);\r\n    setSigningError(error);\r\n    \r\n    console.log(user);\r\n\r\n    if (!error) {\r\n      handleClose();\r\n\r\n      dispatch(\r\n        authActions.login({\r\n          userPhoto: user.photoURL,\r\n          accessToken: user.accessToken,\r\n          name: user.displayName,\r\n          refreshToken: user.refreshToken,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const signout = () => {\r\n    logout();\r\n    dispatch(authActions.logout());\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAuth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        dispatch(\r\n          authActions.login({\r\n            userPhoto: user.photoURL,\r\n            accessToken: user.accessToken,\r\n            name: user.displayName,\r\n            refreshToken: user.refreshToken,\r\n          })\r\n        );\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      open={open || signingError}\r\n      onClose={handleClose}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={open}>\r\n        <Box sx={modalStyle}>\r\n          <div className={classes.registerButtons}>\r\n            {!isLoggedIn && (\r\n              <List>\r\n                <ListItem>\r\n                  <FontAwesomeIcon icon={[\"fab\", \"apple\"]} />\r\n\r\n                  <FacebookLoginButton\r\n                    variant=\"contained\"\r\n                    style={{ width: \"240px\" }}\r\n                    onClick={() => signInHandler(\"Facebook\")}\r\n                  >\r\n                    Facebook\r\n                  </FacebookLoginButton>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <GoogleLoginButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    onClick={() => signInHandler(\"Google\")}\r\n                  >\r\n                    Google\r\n                  </GoogleLoginButton>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <AppleLoginButton\r\n                    variant={isLoggedIn ? \"contained\" : \"outlined\"}\r\n                    className={classes.button}\r\n                  >\r\n                    Apple\r\n                  </AppleLoginButton>\r\n                </ListItem>\r\n              </List>\r\n            )}\r\n            {isLoggedIn && <Button onClick={() => signout()}>Logout</Button>}\r\n          </div>\r\n        </Box>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Registeration;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialDarkModeState = {\r\n  isDark: localStorage.getItem(\"darkMode\") === \"true\" ? true : false,\r\n};\r\n\r\nconst darkSlice = createSlice({\r\n  name: \"dark\",\r\n  initialState: initialDarkModeState,\r\n  reducers: {\r\n    switch(state) {\r\n      state.isDark = !state.isDark;\r\n      localStorage.setItem(\"darkMode\", state.isDark);\r\n    },\r\n  },\r\n});\r\n\r\nexport const darkModeActions = darkSlice.actions;\r\n\r\nexport default darkSlice.reducer;\r\n","const text = {\r\n  en: {\r\n    submit: \"Submit\",\r\n    createNewNote: \"Create a New Note\",\r\n    categories: {\r\n      1: \"Money\",\r\n      2: \"Todo\",\r\n      3: \"Reminders\",\r\n      4: \"Work\",\r\n    },\r\n    details: \"Details\",\r\n    noteTitle: \"Note Title\",\r\n    noteCategory: \"Note Category\",\r\n    siteName: \"Any Notes\",\r\n    myNotes: \"My Notes\",\r\n    addNote: \"Add Note\",\r\n    lightMode: \"Light Mode\",\r\n    darkMode: \"Dark Mode\",\r\n    noNotesYet: \"No Notes Added Yet\",\r\n  },\r\n  ar: {\r\n    submit: \"اضافة\",\r\n    createNewNote: \"انشاء ملاحظة\",\r\n    categories: {\r\n      1: \"مالية\",\r\n      2: \"مهمات\",\r\n      3: \"تذكير\",\r\n      4: \"عمل\",\r\n    },\r\n    details: \"تفاصيل\",\r\n    noteCategory: \"نوع الملاحظة\",\r\n    noteTitle: \"عنوان الملاحظة\",\r\n    siteName: \"اي ملاحظة\",\r\n    myNotes: \"ملاحظاتي\",\r\n    addNote: \"انشاء ملاحظة\",\r\n    lightMode: \"الوضع النهاري\",\r\n    darkMode: \"الوضع اليلي\",\r\n    noNotesYet: \"لم يتم اضافة اي ملاحظات\",\r\n  },\r\n};\r\n\r\nexport default text;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport text from \"../text\";\r\n\r\nconst initialLanguageState = {\r\n  language: localStorage.getItem(\"language\"),\r\n  textContainer: localStorage.getItem(\"language\") === \"en\" ? text.en : text.ar,\r\n};\r\n\r\nconst languageSlice = createSlice({\r\n  name: \"language\",\r\n  initialState: initialLanguageState,\r\n  reducers: {\r\n    switchLanguage(state, actions) {\r\n      state.language = actions.payload.language;\r\n      state.textContainer = text[`${state.language}`];\r\n      localStorage.setItem(\"language\", state.language);\r\n    },\r\n  },\r\n});\r\n\r\nexport const languageActions = languageSlice.actions;\r\n\r\nexport default languageSlice.reducer;\r\n","import { FormControlLabel, FormGroup, styled, Switch } from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n  width: 62,\r\n  height: 34,\r\n  padding: 7,\r\n  \"& .MuiSwitch-switchBase\": {\r\n    margin: 1,\r\n    padding: 0,\r\n    transform: \"translateX(6px)\",\r\n    \"&.Mui-checked\": {\r\n      color: \"#fff\",\r\n      transform: \"translateX(24px)\",\r\n      \"& .MuiSwitch-thumb:before\": {\r\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n          \"#fff\"\r\n        )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\r\n      },\r\n      \"& + .MuiSwitch-track\": {\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n      },\r\n    },\r\n  },\r\n  \"& .MuiSwitch-thumb\": {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    width: 32,\r\n    height: 32,\r\n    \"&:before\": {\r\n      content: \"''\",\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      right: 0,\r\n      top: 0,\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundPosition: \"center\",\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n        \"#fff\"\r\n      )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\r\n    },\r\n  },\r\n  \"& .MuiSwitch-track\": {\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n    borderRadius: 20 / 2,\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSwitches({ label, action }) {\r\n  const isDark = useSelector((state) => state.dark.isDark);\r\n\r\n  return (\r\n    <FormControlLabel\r\n      onClick={action}\r\n      label={label}\r\n      control={<MaterialUISwitch checked={!isDark} dir='ltr'/>}\r\n    />\r\n  );\r\n}\r\n","import {\r\n  AppBar,\r\n  Avatar,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { yellow } from \"@material-ui/core/colors\";\r\nimport {\r\n  AddCircleOutlineOutlined,\r\n  Person,\r\n  SubjectOutlined,\r\n} from \"@material-ui/icons\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { useState } from \"react\";\r\nimport { FormattedDate } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Registeration from \"../pages/Registeration\";\r\nimport { darkModeActions } from \"../store/dark-slice\";\r\nimport { languageActions } from \"../store/language-slice\";\r\nimport CustomizedSwitches from \"./Switch\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    page: {\r\n      width: \"100%\",\r\n      padding: theme.spacing(3),\r\n      height: \"100%\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    activePage: {\r\n      background: theme.palette.activeTile,\r\n    },\r\n    title: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    appBar: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      background: theme.palette.appBar,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    date: {\r\n      flexGrow: 1,\r\n    },\r\n    avatar: {\r\n      \"&:hover\": {\r\n        cursor: \"pointer\",\r\n      },\r\n      width: theme.spacing(5),\r\n      height: theme.spacing(5),\r\n      background: theme.palette.secondary.main,\r\n    },\r\n    aroundAvatar: {\r\n      background: \"transparent\",\r\n      \"&:hover\": {\r\n        background: theme.palette.avatarIconHover,\r\n      },\r\n      width: theme.spacing(5.5),\r\n      height: theme.spacing(5.5),\r\n    },\r\n  };\r\n});\r\n\r\nconst Layout = (props) => {\r\n  const language = useSelector((state) => state.language.language);\r\n  const textContainer = useSelector((state) => state.language.textContainer);\r\n\r\n  const links = [\r\n    {\r\n      title: textContainer.myNotes,\r\n      icon: <SubjectOutlined color=\"secondary\" />,\r\n      path: \"/\",\r\n    },\r\n    {\r\n      title: textContainer.addNote,\r\n      icon: <AddCircleOutlineOutlined color=\"secondary\" />,\r\n      path: \"/create\",\r\n    },\r\n  ];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n  const photo = useSelector((state) => state.auth.photo);\r\n  const name = useSelector((state) => state.auth.name);\r\n  const isDark = useSelector((state) => state.dark.isDark);\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  // modal\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const date = new Date();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        className={classes.appBar}\r\n        style={{ left: language == \"en\" ? drawerWidth : 0 }}\r\n      >\r\n        <Toolbar>\r\n          <Typography className={classes.date}>\r\n            <FormattedDate\r\n              value={date}\r\n              year=\"numeric\"\r\n              month=\"long\"\r\n              day=\"numeric\"\r\n              weekday=\"long\"\r\n            />\r\n          </Typography>\r\n\r\n          <Avatar className={classes.aroundAvatar}>\r\n            <Avatar\r\n              src={photo ?? \"\"}\r\n              className={classes.avatar}\r\n              onClick={handleOpen}\r\n              sx={{ bgcolor: yellow[500] }}\r\n            >\r\n              {name != null ? name.charAt(0) : <Person />}\r\n            </Avatar>\r\n          </Avatar>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        anchor=\"left\"\r\n        classes={{ paper: classes.drawerPaper }}\r\n      >\r\n        <Typography variant=\"h5\" className={classes.title}>\r\n          {textContainer.siteName}\r\n        </Typography>\r\n        <List>\r\n          {links.map((link) => (\r\n            <ListItem\r\n              button\r\n              key={link.title}\r\n              divider\r\n              onClick={() => {\r\n                history.push(link.path);\r\n              }}\r\n              className={\r\n                location.pathname == link.path ? classes.activePage : null\r\n              }\r\n            >\r\n              <ListItemIcon>{link.icon}</ListItemIcon>\r\n              <ListItemText\r\n                primary={link.title}\r\n                style={{\r\n                  display: \"flex\",\r\n                }}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n          <ListItem>\r\n            <CustomizedSwitches\r\n              label={isDark ? textContainer.lightMode : textContainer.darkMode}\r\n              action={() => {\r\n                dispatch(darkModeActions.switch());\r\n              }}\r\n            />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            onClick={() => {\r\n              if (language == \"ar\")\r\n                dispatch(languageActions.switchLanguage({ language: \"en\" }));\r\n              else dispatch(languageActions.switchLanguage({ language: \"ar\" }));\r\n            }}\r\n          >\r\n            {language == \"ar\" ? \"English\" : \"عربي\"}\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n\r\n      <Registeration handleClose={handleClose} open={open} />\r\n\r\n      <div className={classes.page}>\r\n        <div className={classes.toolbar}></div>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { CircularProgress, Box } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Registeration from \"../pages/Registeration\";\r\nimport text from \"../text\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    display: \"block\",\r\n  },\r\n});\r\n\r\nexport default function Create() {\r\n  const classes = useStyles();\r\n\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const [titleError, setTitleError] = useState(false);\r\n  const [detailsError, setDetailsError] = useState(false);\r\n  const [isLoading, setIsLodaing] = useState(false);\r\n  const [category, setCategory] = useState(\"2\");\r\n  const history = useHistory();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const language = useSelector((state) => state.language.language);\r\n  const textContainer = useSelector((state) => state.language.textContainer);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setTitleError(false);\r\n    setDetailsError(false);\r\n\r\n    if (title == \"\") {\r\n      setTitleError(true);\r\n    }\r\n    if (details == \"\") {\r\n      setDetailsError(true);\r\n    }\r\n    if (isLoggedIn) {\r\n      if (title && details) {\r\n        setIsLodaing(true);\r\n\r\n        fetch(\r\n          \"https://reactcoursetest-b6d20-default-rtdb.firebaseio.com/notes.json/\",\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-type\": \"application/json\" },\r\n            body: JSON.stringify({ title, details, category }),\r\n          }\r\n        ).then(() => {\r\n          setIsLodaing(false);\r\n          history.push(\"/\");\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container size=\"sm\">\r\n      <Typography variant=\"h6\" color=\"textPrimary\" component=\"h2\">\r\n        <FormattedMessage\r\n          id=\"createNewNote\"\r\n          value={{ language }}\r\n        ></FormattedMessage>\r\n      </Typography>\r\n\r\n      <form noValidate autoComplete=\"on\" onSubmit={handleSubmit}>\r\n        <TextField\r\n          className={classes.field}\r\n          onChange={(e) => {\r\n            setTitle(e.target.value);\r\n            setTitleError(false);\r\n          }}\r\n          label={textContainer.noteTitle}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          required\r\n          helperText={titleError ? \"Empty\" : \"\"}\r\n          error={titleError}\r\n        />\r\n        <TextField\r\n          className={classes.field}\r\n          onChange={(e) => {\r\n            setDetails(e.target.value);\r\n            if (details == \"\") {\r\n              setDetailsError(false);\r\n            }\r\n          }}\r\n          label={textContainer.details}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          multiline\r\n          rows={4}\r\n          fullWidth\r\n          required\r\n          helperText={detailsError ? \"Empty\" : \"\"}\r\n          error={detailsError}\r\n          InputLabelProps={{}}\r\n        />\r\n        {/* <FormControl className={classes.field}>\r\n          <FormLabel> {textContainer.noteCategory}</FormLabel>\r\n          <RadioGroup\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          >\r\n            <FormControlLabel\r\n              value=\"1\"\r\n              control={<Radio />}\r\n              label={textContainer.categories[1]}\r\n            />\r\n            <FormControlLabel\r\n              value=\"2\"\r\n              control={<Radio />}\r\n              label={textContainer.categories[2]}\r\n            />\r\n            <FormControlLabel\r\n              value=\"3\"\r\n              control={<Radio />}\r\n              label={textContainer.categories[3]}\r\n            />\r\n            <FormControlLabel\r\n              value=\"4\"\r\n              control={<Radio />}\r\n              label={textContainer.categories[4]}\r\n            />\r\n          </RadioGroup>\r\n        </FormControl> */}\r\n\r\n        {isLoading ? (\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : (\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            onClick={!isLoggedIn ? handleOpen : null}\r\n            endIcon={\r\n              <SendIcon\r\n                style={\r\n                  language == \"ar\"\r\n                    ? {\r\n                        transform: `rotateY(180deg)`,\r\n                        marginRight: 12,\r\n                      }\r\n                    : {}\r\n                }\r\n              />\r\n            }\r\n          >\r\n            {textContainer.submit}\r\n          </Button>\r\n        )}\r\n      </form>\r\n\r\n      <Registeration handleClose={handleClose} open={open} />\r\n    </Container>\r\n  );\r\n}\r\n","import { Avatar, makeStyles, Typography } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { blue, green, pink, yellow } from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { DeleteOutlined } from \"@material-ui/icons\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  cardHeader: {\r\n    \"& .MuiCardHeader-avatar\": {\r\n      marginLeft: ({ language }) => {\r\n        if (language === \"en\") return 0;\r\n        else return 16;\r\n      },\r\n      marginRight: ({ language }) => {\r\n        if (language === \"ar\") return 0;\r\n        else return 16;\r\n      },\r\n    },\r\n  },\r\n  note: {\r\n    // border: ({ note }) => {\r\n    //   if (note.category == \"work\") {\r\n    //     return \"1px solid red\";\r\n    //   }\r\n    // },\r\n  },\r\n  avatar: {\r\n    backgroundColor: ({ note }) => {\r\n      if (note.category == \"1\") return yellow[700];\r\n      if (note.category == \"2\") return green[500];\r\n      if (note.category == \"3\") return pink[500];\r\n      return blue[700];\r\n    },\r\n  },\r\n});\r\n\r\nconst Note = ({ note, deleteNote }) => {\r\n  const language = useSelector((state) => state.language.language);\r\n  const textContainer = useSelector((state) => state.language.textContainer);\r\n  const classes = useStyles({ note: note, language: language });\r\n\r\n  const deleteNoteHandler = (id) => {\r\n    deleteNote(id);\r\n  };\r\n\r\n  return (\r\n    <Card elevation={1} className={classes.note}>\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        avatar={\r\n          <Avatar className={classes.avatar}>\r\n            {textContainer.categories[note.category].charAt(0).toUpperCase()}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton\r\n            aria-label=\"settings\"\r\n            onClick={deleteNoteHandler.bind(this, note.id)}\r\n          >\r\n            <DeleteOutlined></DeleteOutlined>\r\n          </IconButton>\r\n        }\r\n        title={note.title}\r\n        subheader={textContainer.categories[note.category]}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {note.details}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import { Container, Typography } from \"@material-ui/core\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Note from \"../components/Note\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Notes() {\r\n  const [notes, setNotes] = useState([]);\r\n  const textContainer = useSelector((state) => state.language.textContainer);\r\n\r\n  const deleteNoteHandler = (id) => {\r\n    fetch(\r\n      `https://reactcoursetest-b6d20-default-rtdb.firebaseio.com/notes/${id}.json`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    ).then(() => {\r\n      setNotes(notes.filter((note) => note.id != id));\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://reactcoursetest-b6d20-default-rtdb.firebaseio.com/notes.json/\"\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        let dummyNotes = [];\r\n        for (const note in data) {\r\n          let fetchedNote = data[note];\r\n          fetchedNote.id = note;\r\n          dummyNotes.push(fetchedNote);\r\n        }\r\n        setNotes(dummyNotes);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }, []);\r\n\r\n  if (notes.length !== 0) {\r\n    return (\r\n      <Container>\r\n        <Masonry\r\n          breakpointCols={{\r\n            default: 3,\r\n            1100: 2,\r\n            700: 1,\r\n          }}\r\n          className=\"my-masonry-grid\"\r\n          columnClassName=\"my-masonry-grid_column\"\r\n        >\r\n          {notes.map((note) => {\r\n            return (\r\n              <div className=\"grid-item\">\r\n                <Note note={note} deleteNote={deleteNoteHandler} />\r\n              </div>\r\n            );\r\n          })}\r\n        </Masonry>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container style={{display:'flex', justifyContent: \"center\" }}>\r\n        <Typography>{textContainer.noNotesYet}</Typography>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import rtlPlugin from \"stylis-plugin-rtl\";\r\nimport { CacheProvider } from \"@emotion/react\";\r\nimport createCache from \"@emotion/cache\";\r\nimport { prefixer } from \"stylis\";\r\n\r\n// Create rtl cache\r\nconst cacheRtl = createCache({\r\n  key: \"muirtl\",\r\n  stylisPlugins: [prefixer, rtlPlugin],\r\n});\r\n\r\nexport default function RTL(props) {\r\n  return <CacheProvider value={cacheRtl}>{props.children}</CacheProvider>;\r\n}\r\n","import { createMuiTheme, CssBaseline, ThemeProvider } from \"@material-ui/core\";\r\nimport { purple, red } from \"@material-ui/core/colors\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Layout from \"./components/Layout\";\r\nimport Create from \"./pages/Create\";\r\nimport Notes from \"./pages/Notes\";\r\nimport Registeration from \"./pages/Registeration\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport text from \"./text\";\r\nimport rtlPlugin from \"stylis-plugin-rtl\";\r\nimport { prefixer } from \"stylis\";\r\nimport createCache from \"@emotion/cache\";\r\nimport { CacheProvider } from \"@emotion/react\";\r\nimport RTL from \"./components/RTL\";\r\n\r\nfunction App() {\r\n  const isDark = useSelector((state) => state.dark.isDark);\r\n  const language = useSelector((state) => state.language.language);\r\n  const textContainer = useSelector((state) => state.language.textContainer);\r\n\r\n  const cacheRtl = createCache({\r\n    key: \"muirtl\",\r\n    stylisPlugins: [prefixer, rtlPlugin],\r\n  });\r\n\r\n  const theme = createMuiTheme({\r\n    palette: isDark\r\n      ? {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#787a78\",\r\n          },\r\n          secondary: { main: \"#f44336\" },\r\n          appBar: \"#393b39\",\r\n          activeTile: \"#373837\",\r\n          avatarIconHover: \"#dee0e0\",\r\n        }\r\n      : {\r\n          type: \"light\",\r\n          primary: {\r\n            main: \"#fefefe\",\r\n          },\r\n          secondary: purple,\r\n          appBar: \"#fefefe\",\r\n          activeTile: \"#f4f4f4\",\r\n          avatarIconHover: \"#dbdbdb\",\r\n        },\r\n    direction: `${language == \"ar\" ? \"rtl\" : \"ltr\"}`,\r\n    typography: {\r\n      fontFamily: \"Quicksand\",\r\n      fontWeightLight: 400,\r\n      fontWeightRegular: 500,\r\n      fontWeightMedium: 600,\r\n      fontWeightBold: 700,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <IntlProvider locale={language} messages={text[language]}>\r\n      <CacheProvider value={cacheRtl}>\r\n        <ThemeProvider theme={theme}>\r\n          <div dir={language == \"ar\" ? \"rtl\" : \"ltr\"}>\r\n            <CssBaseline />\r\n            <RTL>\r\n              <Router>\r\n                <Layout>\r\n                  <Switch>\r\n                    <Route exact path=\"/\">\r\n                      <Notes />\r\n                    </Route>\r\n                    <Route exact path=\"/create\">\r\n                      <Create />\r\n                    </Route>\r\n                  </Switch>\r\n                </Layout>\r\n                <Route path=\"/register\">\r\n                  <Registeration />\r\n                </Route>\r\n              </Router>\r\n            </RTL>\r\n          </div>\r\n        </ThemeProvider>\r\n      </CacheProvider>\r\n    </IntlProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authSliceReducer from \"./auth-slice\";\r\nimport darkSliceReducer from \"./dark-slice\";\r\nimport languageSliceReducer from \"./language-slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: authSliceReducer,\r\n    dark: darkSliceReducer,\r\n    language: languageSliceReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import * as firebase from \"firebase/app\";\r\nimport {\r\n  browserLocalPersistence,\r\n  getAuth,\r\n  setPersistence,\r\n} from \"firebase/auth\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport store from \"./store/index\";\r\nimport firebaseConfig from \"./firebase_config.json\";\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = getAuth();\r\nsetPersistence(auth, browserLocalPersistence).then((user) => {});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nexport default app;\r\n"],"sourceRoot":""}